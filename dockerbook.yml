---
- name: instal docker
  hosts: manager, workers
  sudo: yes
  
  tasks:

    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes

    - name: Run the equivalent of "apt-get upgrade" as a separate step
      apt:
        only_upgrade: yes

    - name: Install the package "apt-transport-https"
      apt:
        name: apt-transport-https
        state: present

    - name: Install the package "software-properties-common"
      apt:
        name: software-properties-common
        state: present
    
    - name: Install the package "ca-certificates"
      apt:
        name: ca-certificates
        state: present   

    - name: Add an Apt signing key, uses whichever key is at the URL
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add 1 line in source.list
      lineinfile:
        path: /etc/apt/sources.list
        line: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable'
         
    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes

    - name: Install the package "docker-ce"
      apt:
        name: docker-ce
        state: present

    - name: Make sure docker is running
      systemd: state=started name=docker

    - name: enable service docker and ensure it is not masked
      systemd:
        name: docker
        enabled: yes
        masked: no

- name: init swarm
  hosts: manager
  sudo: yes

  tasks:
    - name: Swarm Init
      command: docker swarm init --advertise-addr {{ inventory_hostname }}

    - name: Token
      command: docker swarm join-token worker -q
      register: worker_token

    - name: Worker Token
      debug: var=worker_token.stdout

    - name: Manager
      command: docker swarm join-token manager -q
      register: manager_token

    - name: Manager Token
      debug: var=manager_token.stdout

- name: add worckers
  hosts: workers
  sudo: yes
    
  vars:
    token: "{{ hostvars[groups['manager'][0]]['worker_token']['stdout'] }}"
    manager: "{{ hostvars[groups['manager'][0]]['inventory_hostname'] }}"

  tasks:
    - name: Join Swarm Cluster as a Worker
      command: docker swarm join --token {{ token }} {{ manager }}:2377
      register: worker

    - name: Show Results
      debug: var=worker.stdout

    - name: Show Errors
      debug: var=worker.stderr

- name: Output
  hosts: manager
  sudo: yes
    
  tasks:
    - name: result
      command: docker node ls
      register: workresult

    - name: Work Results
      debug: var=workresult.stdout
